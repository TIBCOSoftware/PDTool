
package com.compositesw.services.system.admin;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import com.compositesw.services.system.admin.server.ClusterConfig;
import com.compositesw.services.system.admin.server.LicenseList;
import com.compositesw.services.system.admin.server.PathList;
import com.compositesw.services.system.admin.server.RepairClusterOption;
import com.compositesw.services.system.admin.server.ServerActionList;
import com.compositesw.services.system.util.common.AttributeDefList;
import com.compositesw.services.system.util.common.AttributeList;
import com.compositesw.services.system.util.common.MessageEntryList;
import com.compositesw.services.system.util.common.OperationStatus;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.1-b01-
 * Generated source version: 2.2
 * 
 */
@WebService(name = "serverPortType", targetNamespace = "http://www.compositesw.com/services/system/admin")
@XmlSeeAlso({
    com.compositesw.services.system.admin.resource.ObjectFactory.class,
    com.compositesw.services.system.admin.archive.ObjectFactory.class,
    com.compositesw.services.system.util.common.ObjectFactory.class,
    com.compositesw.services.system.util.security.ObjectFactory.class,
    com.compositesw.services.system.admin.execute.ObjectFactory.class,
    com.compositesw.services.system.admin.server.ObjectFactory.class,
    com.compositesw.services.system.admin.user.ObjectFactory.class
})
public interface ServerPortType {


    /**
     * 
     * @param licenseText
     * @return
     *     returns com.compositesw.services.system.admin.server.LicenseList
     * @throws AddLicensesSoapFault
     */
    @WebMethod(action = "addLicenses")
    @WebResult(name = "licenses", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
    @RequestWrapper(localName = "addLicenses", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.AddLicensesRequest")
    @ResponseWrapper(localName = "addLicensesResponse", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.AddLicensesResponse")
    public LicenseList addLicenses(
        @WebParam(name = "licenseText", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
        String licenseText)
        throws AddLicensesSoapFault
    ;

    /**
     * 
     * @param clusterName
     * @throws CreateClusterSoapFault
     */
    @WebMethod(action = "createCluster")
    @RequestWrapper(localName = "createCluster", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.CreateClusterRequest")
    @ResponseWrapper(localName = "createClusterResponse", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.CreateClusterResponse")
    public void createCluster(
        @WebParam(name = "clusterName", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
        String clusterName)
        throws CreateClusterSoapFault
    ;

    /**
     * 
     * @param tablePath
     * @param tableName
     * @throws CreateDBHealthMonitorTableSoapFault
     */
    @WebMethod(action = "createDBHealthMonitorTable")
    @RequestWrapper(localName = "createDBHealthMonitorTable", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.CreateDBHealthMonitorTableRequest")
    @ResponseWrapper(localName = "createDBHealthMonitorTableResponse", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.CreateDBHealthMonitorTableResponse")
    public void createDBHealthMonitorTable(
        @WebParam(name = "tablePath", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
        String tablePath,
        @WebParam(name = "tableName", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
        String tableName)
        throws CreateDBHealthMonitorTableSoapFault
    ;

    /**
     * 
     * @return
     *     returns com.compositesw.services.system.admin.server.ClusterConfig
     * @throws GetClusterConfigSoapFault
     */
    @WebMethod(action = "getClusterConfig")
    @WebResult(name = "clusterConfig", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
    @RequestWrapper(localName = "getClusterConfig", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.GetClusterConfigRequest")
    @ResponseWrapper(localName = "getClusterConfigResponse", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.GetClusterConfigResponse")
    public ClusterConfig getClusterConfig()
        throws GetClusterConfigSoapFault
    ;

    /**
     * 
     * @param tablePath
     * @param tableName
     * @return
     *     returns java.lang.String
     * @throws GetCreateDBHealthMonitorTableSQLSoapFault
     */
    @WebMethod(action = "getCreateDBHealthMonitorTableSQL")
    @WebResult(name = "sql", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
    @RequestWrapper(localName = "getCreateDBHealthMonitorTableSQL", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.GetCreateDBHealthMonitorTableSQLRequest")
    @ResponseWrapper(localName = "getCreateDBHealthMonitorTableSQLResponse", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.GetCreateDBHealthMonitorTableSQLResponse")
    public String getCreateDBHealthMonitorTableSQL(
        @WebParam(name = "tablePath", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
        String tablePath,
        @WebParam(name = "tableName", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
        String tableName)
        throws GetCreateDBHealthMonitorTableSQLSoapFault
    ;

    /**
     * 
     * @return
     *     returns com.compositesw.services.system.admin.server.LicenseList
     * @throws GetLicensesSoapFault
     */
    @WebMethod(action = "getLicenses")
    @WebResult(name = "licenses", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
    @RequestWrapper(localName = "getLicenses", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.GetLicensesRequest")
    @ResponseWrapper(localName = "getLicensesResponse", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.GetLicensesResponse")
    public LicenseList getLicenses()
        throws GetLicensesSoapFault
    ;

    /**
     * 
     * @return
     *     returns com.compositesw.services.system.admin.server.ServerActionList
     * @throws GetServerActionsSoapFault
     */
    @WebMethod(action = "getServerActions")
    @WebResult(name = "actions", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
    @RequestWrapper(localName = "getServerActions", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.GetServerActionsRequest")
    @ResponseWrapper(localName = "getServerActionsResponse", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.GetServerActionsResponse")
    public ServerActionList getServerActions()
        throws GetServerActionsSoapFault
    ;

    /**
     * 
     * @param path
     * @return
     *     returns com.compositesw.services.system.util.common.AttributeDefList
     * @throws GetServerAttributeDefChildrenSoapFault
     */
    @WebMethod(action = "getServerAttributeDefChildren")
    @WebResult(name = "attributeDefs", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
    @RequestWrapper(localName = "getServerAttributeDefChildren", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.GetServerAttributeDefChildrenRequest")
    @ResponseWrapper(localName = "getServerAttributeDefChildrenResponse", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.GetServerAttributeDefChildrenResponse")
    public AttributeDefList getServerAttributeDefChildren(
        @WebParam(name = "path", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
        String path)
        throws GetServerAttributeDefChildrenSoapFault
    ;

    /**
     * 
     * @param paths
     * @param getAllAttributeDefs
     * @return
     *     returns com.compositesw.services.system.util.common.AttributeDefList
     * @throws GetServerAttributeDefsSoapFault
     */
    @WebMethod(action = "getServerAttributeDefs")
    @WebResult(name = "attributeDefs", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
    @RequestWrapper(localName = "getServerAttributeDefs", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.GetServerAttributeDefsRequest")
    @ResponseWrapper(localName = "getServerAttributeDefsResponse", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.GetServerAttributeDefsResponse")
    public AttributeDefList getServerAttributeDefs(
        @WebParam(name = "paths", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
        PathList paths,
        @WebParam(name = "getAllAttributeDefs", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
        Boolean getAllAttributeDefs)
        throws GetServerAttributeDefsSoapFault
    ;

    /**
     * 
     * @param getAllAttributes
     * @param paths
     * @return
     *     returns com.compositesw.services.system.util.common.AttributeList
     * @throws GetServerAttributesSoapFault
     */
    @WebMethod(action = "getServerAttributes")
    @WebResult(name = "attributes", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
    @RequestWrapper(localName = "getServerAttributes", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.GetServerAttributesRequest")
    @ResponseWrapper(localName = "getServerAttributesResponse", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.GetServerAttributesResponse")
    public AttributeList getServerAttributes(
        @WebParam(name = "paths", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
        PathList paths,
        @WebParam(name = "getAllAttributes", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
        Boolean getAllAttributes)
        throws GetServerAttributesSoapFault
    ;

    /**
     * 
     * @return
     *     returns java.lang.String
     * @throws GetServerNameSoapFault
     */
    @WebMethod(action = "getServerName")
    @WebResult(name = "serverName", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
    @RequestWrapper(localName = "getServerName", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.GetServerNameRequest")
    @ResponseWrapper(localName = "getServerNameResponse", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.GetServerNameResponse")
    public String getServerName()
        throws GetServerNameSoapFault
    ;

    /**
     * 
     * @param remoteUserName
     * @param remotePort
     * @param remotePassword
     * @param remoteDomainName
     * @param remoteHostName
     * @return
     *     returns com.compositesw.services.system.util.common.MessageEntryList
     * @throws JoinClusterSoapFault
     */
    @WebMethod(action = "joinCluster")
    @WebResult(name = "messages", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
    @RequestWrapper(localName = "joinCluster", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.JoinClusterRequest")
    @ResponseWrapper(localName = "joinClusterResponse", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.JoinClusterResponse")
    public MessageEntryList joinCluster(
        @WebParam(name = "remoteHostName", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
        String remoteHostName,
        @WebParam(name = "remotePort", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
        Integer remotePort,
        @WebParam(name = "remoteDomainName", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
        String remoteDomainName,
        @WebParam(name = "remoteUserName", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
        String remoteUserName,
        @WebParam(name = "remotePassword", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
        String remotePassword)
        throws JoinClusterSoapFault
    ;

    /**
     * 
     * @param messages
     * @param attributes
     * @param actionName
     * @param status
     * @throws PerformServerActionSoapFault
     */
    @WebMethod(action = "performServerAction")
    @RequestWrapper(localName = "performServerAction", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.PerformServerActionRequest")
    @ResponseWrapper(localName = "performServerActionResponse", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.PerformServerActionResponse")
    public void performServerAction(
        @WebParam(name = "actionName", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
        String actionName,
        @WebParam(name = "attributes", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
        AttributeList attributes,
        @WebParam(name = "status", targetNamespace = "http://www.compositesw.com/services/system/admin/server", mode = WebParam.Mode.OUT)
        Holder<OperationStatus> status,
        @WebParam(name = "messages", targetNamespace = "http://www.compositesw.com/services/system/admin/server", mode = WebParam.Mode.OUT)
        Holder<MessageEntryList> messages)
        throws PerformServerActionSoapFault
    ;

    /**
     * 
     * @param remotePort
     * @param remoteHostName
     * @return
     *     returns com.compositesw.services.system.util.common.MessageEntryList
     * @throws RemoveFromClusterSoapFault
     */
    @WebMethod(action = "removeFromCluster")
    @WebResult(name = "messages", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
    @RequestWrapper(localName = "removeFromCluster", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.RemoveFromClusterRequest")
    @ResponseWrapper(localName = "removeFromClusterResponse", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.RemoveFromClusterResponse")
    public MessageEntryList removeFromCluster(
        @WebParam(name = "remoteHostName", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
        String remoteHostName,
        @WebParam(name = "remotePort", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
        Integer remotePort)
        throws RemoveFromClusterSoapFault
    ;

    /**
     * 
     * @param licenseId
     * @throws RemoveLicensesSoapFault
     */
    @WebMethod(action = "removeLicenses")
    @RequestWrapper(localName = "removeLicenses", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.RemoveLicensesRequest")
    @ResponseWrapper(localName = "removeLicensesResponse", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.RemoveLicensesResponse")
    public void removeLicenses(
        @WebParam(name = "licenseId", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
        List<String> licenseId)
        throws RemoveLicensesSoapFault
    ;

    /**
     * 
     * @param remoteUserName
     * @param remotePort
     * @param remotePassword
     * @param remoteDomainName
     * @param option
     * @param remoteHostName
     * @return
     *     returns com.compositesw.services.system.util.common.MessageEntryList
     * @throws RepairClusterSoapFault
     */
    @WebMethod(action = "repairCluster")
    @WebResult(name = "messages", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
    @RequestWrapper(localName = "repairCluster", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.RepairClusterRequest")
    @ResponseWrapper(localName = "repairClusterResponse", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.RepairClusterResponse")
    public MessageEntryList repairCluster(
        @WebParam(name = "option", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
        RepairClusterOption option,
        @WebParam(name = "remoteHostName", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
        String remoteHostName,
        @WebParam(name = "remotePort", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
        Integer remotePort,
        @WebParam(name = "remoteDomainName", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
        String remoteDomainName,
        @WebParam(name = "remoteUserName", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
        String remoteUserName,
        @WebParam(name = "remotePassword", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
        String remotePassword)
        throws RepairClusterSoapFault
    ;

    /**
     * 
     * @param clusterName
     * @throws UpdateClusterNameSoapFault
     */
    @WebMethod(action = "updateClusterName")
    @RequestWrapper(localName = "updateClusterName", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.UpdateClusterNameRequest")
    @ResponseWrapper(localName = "updateClusterNameResponse", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.UpdateClusterNameResponse")
    public void updateClusterName(
        @WebParam(name = "clusterName", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
        String clusterName)
        throws UpdateClusterNameSoapFault
    ;

    /**
     * 
     * @param attributes
     * @throws UpdateServerAttributesSoapFault
     */
    @WebMethod(action = "updateServerAttributes")
    @RequestWrapper(localName = "updateServerAttributes", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.UpdateServerAttributesRequest")
    @ResponseWrapper(localName = "updateServerAttributesResponse", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.UpdateServerAttributesResponse")
    public void updateServerAttributes(
        @WebParam(name = "attributes", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
        AttributeList attributes)
        throws UpdateServerAttributesSoapFault
    ;

    /**
     * 
     * @param serverName
     * @throws UpdateServerNameSoapFault
     */
    @WebMethod(action = "updateServerName")
    @RequestWrapper(localName = "updateServerName", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.UpdateServerNameRequest")
    @ResponseWrapper(localName = "updateServerNameResponse", targetNamespace = "http://www.compositesw.com/services/system/admin/server", className = "com.compositesw.services.system.admin.server.UpdateServerNameResponse")
    public void updateServerName(
        @WebParam(name = "serverName", targetNamespace = "http://www.compositesw.com/services/system/admin/server")
        String serverName)
        throws UpdateServerNameSoapFault
    ;

}
