<?xml version="1.0" encoding="UTF-8"?>
<!--
######################################################################
# (c) 2014 Cisco and/or its affiliates. All rights reserved.
# 
# This software is released under the Eclipse Public License. The details can be found in the file LICENSE. 
# Any dependent libraries supplied by third parties are provided under their own open source licenses as 
# described in their own LICENSE files, generally named .LICENSE.txt. The libraries supplied by Cisco as 
# part of the Composite Information Server/Cisco Data Virtualization Server, particularly csadmin-XXXX.jar, 
# csarchive-XXXX.jar, csbase-XXXX.jar, csclient-XXXX.jar, cscommon-XXXX.jar, csext-XXXX.jar, csjdbc-XXXX.jar, 
# csserverutil-XXXX.jar, csserver-XXXX.jar, cswebapi-XXXX.jar, and customproc-XXXX.jar (where -XXXX is an 
# optional version number) are provided as a convenience, but are covered under the licensing for the 
# Composite Information Server/Cisco Data Virtualization Server. They cannot be used in any way except 
# through a valid license for that product.
# 
# This software is released AS-IS!. Support for this software is not covered by standard maintenance agreements with Cisco. 
# Any support for this software by Cisco would be covered by paid consulting agreements, and would be billable work.
# 
######################################################################

*******************************************************
**** IMPORTANT - PLEASE READ REGARDING COMPILATION ****
*******************************************************
	To build the 7.0 jars, the properties java build path must be set for lib7.0.0
	
	1. Right click on the PDTool project, select properties, Select Java Build Path

	2. LIBRARIES: click on "Libraries" tab
			Select lib6.2 and click the "Remove" button
			Click "Add Library" button
			Select "User Library" and click Next
			Select lib7.0.0 library and click finish
			Click OK to 
	3. Clean the project
	4. Execute the build_release7.0.0.xml
-->
<project name="PDTool" default="default" basedir=".">

	<!-- change the release number from r1 to r2, etc. if there is more than one build in a day. -->
	<property name="ver" value="7.0.0"/>
	<property name="relNum" value="r1"/>
	<property name="project-name" value="PDTool"/>
	<property name="atf" value="AutomatedTestFramework"/>
	<property name="src" value="src"/>
	<property name="build" location="build"/>
	<property name="bin" location="bin"/>
	<property name="dist" value="dist"/>
	<property name="ext" location="ext"/>
	<property name="lib" value="libcommon"/>
	<property name="libver" value="lib${ver}"/>
	<property name="licenses" location="licenses"/>
	<property name="regression" location="regression"/>
	<property name="resources" location="resources"/>
	<property name="security" location="security"/>
	<property name="docs" location="PDToolDocs/docs"/>
	<property name="project-PDToolModules" value="PDToolModules"/>

	<!-- Release variables -->
	<property name="relbase" value="../PDToolRelease"/>
	<property file="${relbase}/_general_release/release_date_candidate.properties"/>
	<property name="regression_rel" location="${relbase}/regression"/>
	<property name="regression-target" value="PDToolRegression"/>
	<property name="regression-zip-file-name" value="regression-${RELEASE_DT_CANDIDATE}.zip"/>
	
	<path id="project.class.path">
		<fileset dir="${lib}">
			<include name="**/*.jar"/>
		</fileset>
		<fileset dir="${libver}">
			<include name="**/*.jar"/>
		</fileset>
		<fileset dir="ext/ant/lib">
			<include name="**/*.jar"/>
		</fileset>
	</path>

	<!-- Check for existence of a Regression release zip file.  Don't continue if it exists because we don't want a final release to be accidently overwritten. -->
	<target name="PdtoolRegressionZipExist">
		<fail message="PDTOOL REGRESSION ZIP FILE ALREADY EXISTS: ${regression_rel}/${regression-zip-file-name}">
			<condition>
				<available file="${regression_rel}/${regression-zip-file-name}"/>
			</condition>
		</fail>
	</target>

	<!-- Create the PDTool Regresion distribution zip file. -->
	<target name="dist" depends="PdtoolRegressionZipExist">

		<!-- 
		***************************************************************
		Create Regression distribution zip file.
		***************************************************************
		-->
		<!-- Create the Regression zip file target directories -->
		<mkdir dir="${regression-target}"/>
		<mkdir dir="${regression-target}/carfiles"/>
		<mkdir dir="${regression-target}/config"/>
		<mkdir dir="${regression-target}/config_lists"/>
		<mkdir dir="${regression-target}/modules"/>
		<mkdir dir="${regression-target}/modules/generated"/>
		<mkdir dir="${regression-target}/modules/test"/>
		<mkdir dir="${regression-target}/plan_lists"/>
		<mkdir dir="${regression-target}/plans"/>
		<!-- Copy files from the regression source to the regression target directories -->
		<copy todir="${regression-target}">
		    <fileset dir="${regression}">
		        <include name="*.txt"/>
		        <include name="*.bat"/>
		        <include name="*.sh"/>
		    </fileset>
		</copy>
		<copy todir="${regression-target}/carfiles">
		    <fileset dir="${regression}/carfiles">
		        <include name="*.car"/>
		    </fileset>
		</copy>
		<copy todir="${regression-target}/config">
		    <fileset dir="${regression}/config">
		        <include name="*.car"/>
		    </fileset>
		</copy>
		<copy todir="${regression-target}/config">
		    <fileset dir="${regression}/config">
		        <include name="*.properties"/>
		    </fileset>
		</copy>
		<copy todir="${regression-target}/config_lists">
		    <fileset dir="${regression}/config_lists">
		        <include name="*.txt"/>
		    </fileset>
		</copy>
		<copy todir="${regression-target}/modules/test">
		    <fileset dir="${regression}/modules/test">
		        <include name="*.txt"/>
		    </fileset>
		</copy>
		<copy todir="${regression-target}/modules">
		    <fileset dir="${regression}/modules">
		        <include name="*.xml"/>
		    </fileset>
		</copy>
		<copy todir="${regression-target}/plan_lists">
		    <fileset dir="${regression}/plan_lists">
		        <include name="*.txt"/>
		    </fileset>
		</copy>
		<copy todir="${regression-target}/plans">
		    <fileset dir="${regression}/plans">
		        <include name="*.dp"/>
		    </fileset>
		</copy>

		<!-- Create the PDToolRegression zip file -->
		<zip destfile="${regression_rel}/${regression-zip-file-name}" basedir="." includes="${regression-target}/**" />

		<!-- Delete the staging directory used to create the zip file. -->
		<delete dir="${regression-target}"/>

	</target>
	
	<target name="clean" description="clean up">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}" />
	</target>

	<target name="default" depends="clean,dist" description="Create the PDTool Regression Distribution"/>
</project>
