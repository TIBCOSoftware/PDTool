//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-257 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.09.30 at 05:10:56 PM EDT 
//


package com.tibco.ps.deploytool.modules;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * 
 * 				Resource Type: Provides a structure for the Resource Module.  The Resource Type can be used for several actions
 * 				including execute configured procedures, delete (destroy) a resource, rename a resource, delete a resource and more.  
 * 				The elements used to "EXECUTE PROCEDURE" are as follows: resourcePath=published procedure name, dataServiceName=published database name, 
 * 				argument=an iteration of arguments where by each argument that is passed into the procedure goes on a separate argument line.
 * 				The elements used to "RENAME RESOURCE" are as follows: resourcePath=A source path of the resource to be renamed,
 * 				resourceType, newName=The new name of the resource.
 * 				The elements used to "DELETE RESOURCE" are as follows: resourcePath, resourceType and force=If "true", then attempt to destroy as many resources as possible.
 *        			If "false", then do not destroy any resource if there exists at least one that is not destroyable.
 * 				The elements used to "UNLOCK RESOURCE" are as follows: resourcePath, resourceType, and comment=A description about why the resource is being unlocked.
 * 				The elements used to "MOVE RESOURCE" are as follows: resourcePath, resourceType, newName, targetContainerPath=The path of the target container to move the resource into,
 * 				force=If a resource exists in the target container with the same name and type of the target resource and force is "true", then the resource within the
 *        			target container will be overwritten.  If force is "false", then a DuplicateName fault will be generated and resource will not be moved.
 * 			
 * 
 * <p>Java class for ResourceType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ResourceType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="id" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="resourcePath" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="recursive" minOccurs="0">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;enumeration value="true"/>
 *               &lt;enumeration value="false"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="targetContainerPath" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="newName" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="copyMode" minOccurs="0">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;enumeration value="ALTER_NAME_IF_EXISTS"/>
 *               &lt;enumeration value="FAIL_IF_EXISTS"/>
 *               &lt;enumeration value="OVERWRITE_MERGE_IF_EXISTS"/>
 *               &lt;enumeration value="OVERWRITE_REPLACE_IF_EXISTS"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="comment" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="dataServiceName" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="argument" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="outputReturnVariables" minOccurs="0">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;enumeration value="true"/>
 *               &lt;enumeration value="false"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="ignoreErrors" minOccurs="0">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;enumeration value="true"/>
 *               &lt;enumeration value="false"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ResourceType", propOrder = {
    "id",
    "resourcePath",
    "recursive",
    "targetContainerPath",
    "newName",
    "copyMode",
    "comment",
    "dataServiceName",
    "argument",
    "outputReturnVariables",
    "ignoreErrors"
})
public class ResourceType {

    @XmlElement(required = true)
    protected String id;
    protected List<String> resourcePath;
    protected String recursive;
    protected String targetContainerPath;
    protected String newName;
    protected String copyMode;
    protected String comment;
    protected String dataServiceName;
    protected List<String> argument;
    protected String outputReturnVariables;
    protected String ignoreErrors;

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setId(String value) {
        this.id = value;
    }

    /**
     * Gets the value of the resourcePath property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the resourcePath property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getResourcePath().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getResourcePath() {
        if (resourcePath == null) {
            resourcePath = new ArrayList<String>();
        }
        return this.resourcePath;
    }

    /**
     * Gets the value of the recursive property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRecursive() {
        return recursive;
    }

    /**
     * Sets the value of the recursive property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRecursive(String value) {
        this.recursive = value;
    }

    /**
     * Gets the value of the targetContainerPath property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTargetContainerPath() {
        return targetContainerPath;
    }

    /**
     * Sets the value of the targetContainerPath property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTargetContainerPath(String value) {
        this.targetContainerPath = value;
    }

    /**
     * Gets the value of the newName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getNewName() {
        return newName;
    }

    /**
     * Sets the value of the newName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNewName(String value) {
        this.newName = value;
    }

    /**
     * Gets the value of the copyMode property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCopyMode() {
        return copyMode;
    }

    /**
     * Sets the value of the copyMode property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCopyMode(String value) {
        this.copyMode = value;
    }

    /**
     * Gets the value of the comment property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getComment() {
        return comment;
    }

    /**
     * Sets the value of the comment property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setComment(String value) {
        this.comment = value;
    }

    /**
     * Gets the value of the dataServiceName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDataServiceName() {
        return dataServiceName;
    }

    /**
     * Sets the value of the dataServiceName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDataServiceName(String value) {
        this.dataServiceName = value;
    }

    /**
     * Gets the value of the argument property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the argument property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getArgument().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getArgument() {
        if (argument == null) {
            argument = new ArrayList<String>();
        }
        return this.argument;
    }

    /**
     * Gets the value of the outputReturnVariables property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getOutputReturnVariables() {
        return outputReturnVariables;
    }

    /**
     * Sets the value of the outputReturnVariables property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setOutputReturnVariables(String value) {
        this.outputReturnVariables = value;
    }

    /**
     * Gets the value of the ignoreErrors property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIgnoreErrors() {
        return ignoreErrors;
    }

    /**
     * Sets the value of the ignoreErrors property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIgnoreErrors(String value) {
        this.ignoreErrors = value;
    }

}
